"""initial

Revision ID: 91bae30021b7
Revises: 
Create Date: 2024-09-06 23:26:56.147245

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import app

# revision identifiers, used by Alembic.
revision: str = '91bae30021b7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('parent_molecules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('synonyms', sa.String(), nullable=True),
    sa.Column('smiles_canonical', sa.String(), nullable=True),
    sa.Column('selfies', sa.String(), nullable=True),
    sa.Column('inchi', sa.String(), nullable=True),
    sa.Column('inchi_key', sa.String(), nullable=True),
    sa.Column('smarts', sa.String(), nullable=True),
    sa.Column('mw', sa.Float(), nullable=True),
    sa.Column('fsp3', sa.Float(), nullable=True),
    sa.Column('n_lipinski_hba', sa.Integer(), nullable=True),
    sa.Column('n_lipinski_hbd', sa.Integer(), nullable=True),
    sa.Column('n_rings', sa.Integer(), nullable=True),
    sa.Column('n_hetero_atoms', sa.Integer(), nullable=True),
    sa.Column('n_heavy_atoms', sa.Integer(), nullable=True),
    sa.Column('n_rotatable_bonds', sa.Integer(), nullable=True),
    sa.Column('n_radical_electrons', sa.Integer(), nullable=True),
    sa.Column('tpsa', sa.Float(), nullable=True),
    sa.Column('qed', sa.Float(), nullable=True),
    sa.Column('clogp', sa.Float(), nullable=True),
    sa.Column('sas', sa.Float(), nullable=True),
    sa.Column('n_aliphatic_carbocycles', sa.Integer(), nullable=True),
    sa.Column('n_aliphatic_heterocycles', sa.Integer(), nullable=True),
    sa.Column('n_aliphatic_rings', sa.Integer(), nullable=True),
    sa.Column('n_aromatic_carbocycles', sa.Integer(), nullable=True),
    sa.Column('n_aromatic_heterocycles', sa.Integer(), nullable=True),
    sa.Column('n_aromatic_rings', sa.Integer(), nullable=True),
    sa.Column('n_saturated_carbocycles', sa.Integer(), nullable=True),
    sa.Column('n_saturated_heterocycles', sa.Integer(), nullable=True),
    sa.Column('n_saturated_rings', sa.Integer(), nullable=True),
    sa.Column('ro5_compliant', sa.Boolean(), nullable=True),
    sa.Column('molblock', sa.String(), nullable=True),
    sa.Column('morgan_fp', app.db.models.parent_molecule.BfpType(), nullable=True),
    sa.Column('rdkit_fp', app.db.models.parent_molecule.BfpType(), nullable=True),
    sa.Column('mol', app.db.models.parent_molecule.MolType(), nullable=True),
    sa.Column('_created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('_updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('_deleted_at', sa.DateTime(), nullable=True),
    sa.Column('_created_by', sa.UUID(), nullable=True),
    sa.Column('_updated_by', sa.UUID(), nullable=True),
    sa.Column('_deleted_by', sa.UUID(), nullable=True),
    sa.Column('_is_deleted', sa.Boolean(), nullable=True),
    sa.Column('_status', sa.String(), nullable=True),
    sa.Column('_version', sa.Integer(), nullable=True),
    sa.Column('_owner_id', sa.UUID(), nullable=True),
    sa.Column('_tenant_id', sa.UUID(), nullable=True),
    sa.Column('_tags', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parent_molecules_id'), 'parent_molecules', ['id'], unique=True)
    op.create_index(op.f('ix_parent_molecules_mol'), 'parent_molecules', ['mol'], unique=False)
    op.create_index(op.f('ix_parent_molecules_morgan_fp'), 'parent_molecules', ['morgan_fp'], unique=False)
    op.create_index(op.f('ix_parent_molecules_name'), 'parent_molecules', ['name'], unique=False)
    op.create_index(op.f('ix_parent_molecules_rdkit_fp'), 'parent_molecules', ['rdkit_fp'], unique=False)
    op.create_index(op.f('ix_parent_molecules_smiles_canonical'), 'parent_molecules', ['smiles_canonical'], unique=False)
    op.create_index(op.f('ix_parent_molecules_synonyms'), 'parent_molecules', ['synonyms'], unique=False)
    op.create_table('raw_molecules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('registration_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('smiles', sa.String(), nullable=True),
    sa.Column('reg_status', sa.String(), nullable=True),
    sa.Column('_created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('_updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('_deleted_at', sa.DateTime(), nullable=True),
    sa.Column('_created_by', sa.UUID(), nullable=True),
    sa.Column('_updated_by', sa.UUID(), nullable=True),
    sa.Column('_deleted_by', sa.UUID(), nullable=True),
    sa.Column('_is_deleted', sa.Boolean(), nullable=True),
    sa.Column('_status', sa.String(), nullable=True),
    sa.Column('_version', sa.Integer(), nullable=True),
    sa.Column('_owner_id', sa.UUID(), nullable=True),
    sa.Column('_tenant_id', sa.UUID(), nullable=True),
    sa.Column('_tags', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_raw_molecules_id'), 'raw_molecules', ['id'], unique=False)
    op.create_index(op.f('ix_raw_molecules_name'), 'raw_molecules', ['name'], unique=False)
    op.create_index(op.f('ix_raw_molecules_registration_id'), 'raw_molecules', ['registration_id'], unique=False)
    op.create_table('molecules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('synonyms', sa.String(), nullable=True),
    sa.Column('smiles', sa.String(), nullable=True),
    sa.Column('smiles_canonical', sa.String(), nullable=True),
    sa.Column('selfies', sa.String(), nullable=True),
    sa.Column('inchi', sa.String(), nullable=True),
    sa.Column('inchi_key', sa.String(), nullable=True),
    sa.Column('smarts', sa.String(), nullable=True),
    sa.Column('mw', sa.Float(), nullable=True),
    sa.Column('fsp3', sa.Float(), nullable=True),
    sa.Column('n_lipinski_hba', sa.Integer(), nullable=True),
    sa.Column('n_lipinski_hbd', sa.Integer(), nullable=True),
    sa.Column('n_rings', sa.Integer(), nullable=True),
    sa.Column('n_hetero_atoms', sa.Integer(), nullable=True),
    sa.Column('n_heavy_atoms', sa.Integer(), nullable=True),
    sa.Column('n_rotatable_bonds', sa.Integer(), nullable=True),
    sa.Column('n_radical_electrons', sa.Integer(), nullable=True),
    sa.Column('tpsa', sa.Float(), nullable=True),
    sa.Column('qed', sa.Float(), nullable=True),
    sa.Column('clogp', sa.Float(), nullable=True),
    sa.Column('sas', sa.Float(), nullable=True),
    sa.Column('n_aliphatic_carbocycles', sa.Integer(), nullable=True),
    sa.Column('n_aliphatic_heterocycles', sa.Integer(), nullable=True),
    sa.Column('n_aliphatic_rings', sa.Integer(), nullable=True),
    sa.Column('n_aromatic_carbocycles', sa.Integer(), nullable=True),
    sa.Column('n_aromatic_heterocycles', sa.Integer(), nullable=True),
    sa.Column('n_aromatic_rings', sa.Integer(), nullable=True),
    sa.Column('n_saturated_carbocycles', sa.Integer(), nullable=True),
    sa.Column('n_saturated_heterocycles', sa.Integer(), nullable=True),
    sa.Column('n_saturated_rings', sa.Integer(), nullable=True),
    sa.Column('ro5_compliant', sa.Boolean(), nullable=True),
    sa.Column('o_molblock', sa.String(), nullable=True),
    sa.Column('std_molblock', sa.String(), nullable=True),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('morgan_fp', app.db.models.molecule.BfpType(), nullable=True),
    sa.Column('rdkit_fp', app.db.models.molecule.BfpType(), nullable=True),
    sa.Column('mol', app.db.models.molecule.MolType(), nullable=True),
    sa.Column('_created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('_updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('_deleted_at', sa.DateTime(), nullable=True),
    sa.Column('_created_by', sa.UUID(), nullable=True),
    sa.Column('_updated_by', sa.UUID(), nullable=True),
    sa.Column('_deleted_by', sa.UUID(), nullable=True),
    sa.Column('_is_deleted', sa.Boolean(), nullable=True),
    sa.Column('_status', sa.String(), nullable=True),
    sa.Column('_version', sa.Integer(), nullable=True),
    sa.Column('_owner_id', sa.UUID(), nullable=True),
    sa.Column('_tenant_id', sa.UUID(), nullable=True),
    sa.Column('_tags', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['parent_molecules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_molecules_id'), 'molecules', ['id'], unique=True)
    op.create_index(op.f('ix_molecules_mol'), 'molecules', ['mol'], unique=False)
    op.create_index(op.f('ix_molecules_morgan_fp'), 'molecules', ['morgan_fp'], unique=False)
    op.create_index(op.f('ix_molecules_name'), 'molecules', ['name'], unique=False)
    op.create_index(op.f('ix_molecules_rdkit_fp'), 'molecules', ['rdkit_fp'], unique=False)
    op.create_index(op.f('ix_molecules_smiles_canonical'), 'molecules', ['smiles_canonical'], unique=False)
    op.create_index(op.f('ix_molecules_synonyms'), 'molecules', ['synonyms'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_molecules_synonyms'), table_name='molecules')
    op.drop_index(op.f('ix_molecules_smiles_canonical'), table_name='molecules')
    op.drop_index(op.f('ix_molecules_rdkit_fp'), table_name='molecules')
    op.drop_index(op.f('ix_molecules_name'), table_name='molecules')
    op.drop_index(op.f('ix_molecules_morgan_fp'), table_name='molecules')
    op.drop_index(op.f('ix_molecules_mol'), table_name='molecules')
    op.drop_index(op.f('ix_molecules_id'), table_name='molecules')
    op.drop_table('molecules')
    op.drop_index(op.f('ix_raw_molecules_registration_id'), table_name='raw_molecules')
    op.drop_index(op.f('ix_raw_molecules_name'), table_name='raw_molecules')
    op.drop_index(op.f('ix_raw_molecules_id'), table_name='raw_molecules')
    op.drop_table('raw_molecules')
    op.drop_index(op.f('ix_parent_molecules_synonyms'), table_name='parent_molecules')
    op.drop_index(op.f('ix_parent_molecules_smiles_canonical'), table_name='parent_molecules')
    op.drop_index(op.f('ix_parent_molecules_rdkit_fp'), table_name='parent_molecules')
    op.drop_index(op.f('ix_parent_molecules_name'), table_name='parent_molecules')
    op.drop_index(op.f('ix_parent_molecules_morgan_fp'), table_name='parent_molecules')
    op.drop_index(op.f('ix_parent_molecules_mol'), table_name='parent_molecules')
    op.drop_index(op.f('ix_parent_molecules_id'), table_name='parent_molecules')
    op.drop_table('parent_molecules')
    # ### end Alembic commands ###
